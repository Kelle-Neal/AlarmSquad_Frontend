import React from 'react';
import PropTypes from 'prop-types';
import Input from './Input';
import { isTime } from '../shared/propTypes';
type SecondInputProps = {
    hour?: string | null;
    maxTime?: string;
    minTime?: string;
    minute?: string | null;
    showLeadingZeros?: boolean;
} & Omit<React.ComponentProps<typeof Input>, 'max' | 'min' | 'name'>;
declare function SecondInput({ hour, maxTime, minTime, minute, showLeadingZeros, ...otherProps }: SecondInputProps): JSX.Element;
declare namespace SecondInput {
    var propTypes: {
        ariaLabel: PropTypes.Requireable<string>;
        className: PropTypes.Validator<string>;
        disabled: PropTypes.Requireable<boolean>;
        hour: PropTypes.Requireable<string>;
        inputRef: PropTypes.Requireable<NonNullable<((...args: any[]) => any) | PropTypes.InferProps<{
            current: PropTypes.Requireable<any>;
        }> | null | undefined>>;
        maxTime: typeof isTime;
        minTime: typeof isTime;
        minute: PropTypes.Requireable<string>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        onKeyDown: PropTypes.Requireable<(...args: any[]) => any>;
        onKeyUp: PropTypes.Requireable<(...args: any[]) => any>;
        placeholder: PropTypes.Requireable<string>;
        required: PropTypes.Requireable<boolean>;
        showLeadingZeros: PropTypes.Requireable<boolean>;
        value: PropTypes.Requireable<string>;
    };
}
export default SecondInput;
