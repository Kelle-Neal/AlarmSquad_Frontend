/// <reference types="react" />
import PropTypes from 'prop-types';
import { isTime } from './shared/propTypes';
import type { Detail, LooseValuePiece, Value } from './shared/types';
type TimeInputProps = {
    amPmAriaLabel?: string;
    autoFocus?: boolean;
    className: string;
    disabled?: boolean;
    format?: string;
    hourAriaLabel?: string;
    hourPlaceholder?: string;
    isClockOpen?: boolean | null;
    locale?: string;
    maxDetail?: Detail;
    maxTime?: string;
    minTime?: string;
    minuteAriaLabel?: string;
    minutePlaceholder?: string;
    name?: string;
    nativeInputAriaLabel?: string;
    onChange?: (value: Value, shouldCloseClock: boolean) => void;
    required?: boolean;
    secondAriaLabel?: string;
    secondPlaceholder?: string;
    value?: LooseValuePiece;
};
declare function TimeInput({ amPmAriaLabel, autoFocus, className, disabled, format, hourAriaLabel, hourPlaceholder, isClockOpen: isClockOpenProps, locale, maxDetail, maxTime, minTime, minuteAriaLabel, minutePlaceholder, name, nativeInputAriaLabel, onChange: onChangeProps, required, secondAriaLabel, secondPlaceholder, value: valueProps, }: TimeInputProps): JSX.Element;
declare namespace TimeInput {
    var propTypes: {
        amPmAriaLabel: PropTypes.Requireable<string>;
        autoFocus: PropTypes.Requireable<boolean>;
        className: PropTypes.Validator<string>;
        disabled: PropTypes.Requireable<boolean>;
        format: PropTypes.Requireable<string>;
        hourAriaLabel: PropTypes.Requireable<string>;
        hourPlaceholder: PropTypes.Requireable<string>;
        isClockOpen: PropTypes.Requireable<boolean>;
        locale: PropTypes.Requireable<string>;
        maxDetail: PropTypes.Requireable<"hour" | "minute" | "second">;
        maxTime: typeof isTime;
        minTime: typeof isTime;
        minuteAriaLabel: PropTypes.Requireable<string>;
        minutePlaceholder: PropTypes.Requireable<string>;
        name: PropTypes.Requireable<string>;
        nativeInputAriaLabel: PropTypes.Requireable<string>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        required: PropTypes.Requireable<boolean>;
        secondAriaLabel: PropTypes.Requireable<string>;
        secondPlaceholder: PropTypes.Requireable<string>;
        value: PropTypes.Requireable<{}>;
    };
}
export default TimeInput;
